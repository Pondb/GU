// <auto-generated />
using GU.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GU.Migrations
{
    [DbContext(typeof(GU_DB))]
    [Migration("20190329051850_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GU.Models.ToDo_Task", b =>
                {
                    b.Property<int>("Task_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Task_Create_Date");

                    b.Property<string>("Task_Description");

                    b.Property<string>("Task_Due_Date");

                    b.Property<string>("Task_Due_Time");

                    b.Property<string>("Task_Name");

                    b.Property<int>("Task_Parent_ID");

                    b.Property<string>("Task_Status");

                    b.Property<string>("Task_Update_Date");

                    b.Property<string>("Task_isComplete");

                    b.Property<string>("Task_isFail");

                    b.Property<int>("Task_isFocus");

                    b.Property<int>("User_ID");

                    b.HasKey("Task_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("ToDo_Task");
                });

            modelBuilder.Entity("GU.Models.Tree_Type", b =>
                {
                    b.Property<int>("Tree_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tree_LV1_DIE");

                    b.Property<string>("Tree_LV1_IMG");

                    b.Property<string>("Tree_LV2_DIE");

                    b.Property<string>("Tree_LV2_IMG");

                    b.Property<string>("Tree_LV3_DIE");

                    b.Property<string>("Tree_LV3_IMG");

                    b.Property<string>("Tree_LV4_DIE");

                    b.Property<string>("Tree_Type_Description");

                    b.Property<string>("Tree_Type_Name");

                    b.HasKey("Tree_Type_ID");

                    b.ToTable("Tree_Type");
                });

            modelBuilder.Entity("GU.Models.Trees", b =>
                {
                    b.Property<int>("Tree_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Create_Date");

                    b.Property<string>("Plant_Date");

                    b.Property<string>("Tree_Description");

                    b.Property<double>("Tree_EXP");

                    b.Property<int>("Tree_HP");

                    b.Property<int>("Tree_Level");

                    b.Property<string>("Tree_Name");

                    b.Property<string>("Tree_Status");

                    b.Property<int>("Tree_Type_ID");

                    b.Property<string>("Tree_isDead");

                    b.Property<string>("Update_Date");

                    b.Property<int>("User_ID");

                    b.HasKey("Tree_ID");

                    b.HasIndex("Tree_Type_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("GU.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthdate");

                    b.Property<string>("Email");

                    b.Property<string>("First_Name");

                    b.Property<string>("Gender");

                    b.Property<string>("Last_Login");

                    b.Property<string>("Last_Name");

                    b.Property<string>("Last_Update");

                    b.Property<string>("Password");

                    b.Property<int>("Role_ID");

                    b.Property<string>("User_Status");

                    b.Property<string>("User_isLock");

                    b.Property<int>("Wrong_Password_Count");

                    b.HasKey("User_ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GU.Models.ToDo_Task", b =>
                {
                    b.HasOne("GU.Models.User", "UserInfo")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GU.Models.Trees", b =>
                {
                    b.HasOne("GU.Models.Tree_Type", "Tree_Type")
                        .WithMany()
                        .HasForeignKey("Tree_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GU.Models.User", "UserInfo")
                        .WithMany("Trees")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
