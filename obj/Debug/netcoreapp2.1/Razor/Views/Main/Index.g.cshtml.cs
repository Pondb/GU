#pragma checksum "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2b65da580a91d0af3de7f628ce1131942ae27d49"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Main_Index), @"mvc.1.0.view", @"/Views/Main/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Main/Index.cshtml", typeof(AspNetCore.Views_Main_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\_ViewImports.cshtml"
using GU;

#line default
#line hidden
#line 2 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\_ViewImports.cshtml"
using GU.Models;

#line default
#line hidden
#line 3 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b65da580a91d0af3de7f628ce1131942ae27d49", @"/Views/Main/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ff57ca875f9df937fe78e46941148558c1432e42", @"/Views/_ViewImports.cshtml")]
    public class Views_Main_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GU.Models.Trees>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    

#line default
#line hidden
#line 3 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
                                    

    var user_id = Context.Session.GetString("User_ID");

#line default
#line hidden
            BeginContext(142, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(168, 69, true);
            WriteLiteral("\r\n\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n\r\n\r\n\r\n\r\n");
            EndContext();
            BeginContext(297, 201, true);
            WriteLiteral("\r\n    window.onload = function () {\r\n        resize();\r\n        window.addEventListener(\"resize\", resize, false);\r\n\r\n    };\r\n\r\n\r\n</script>\r\n\r\n<script>\r\n\r\n    //NIGHT OR DAY FUNCTION\r\n    var bgTime = \"");
            EndContext();
            BeginContext(499, 21, false);
#line 37 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
             Write(ViewBag.Scene_Time_BG);

#line default
#line hidden
            EndContext();
            BeginContext(520, 28, true);
            WriteLiteral("\";\r\n    var bgDayorNight = \"");
            EndContext();
            BeginContext(549, 12, false);
#line 38 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
                   Write(ViewBag.DorN);

#line default
#line hidden
            EndContext();
            BeginContext(561, 24, true);
            WriteLiteral("\";\r\n    var treeLevel = ");
            EndContext();
            BeginContext(586, 17, false);
#line 39 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
               Write(Model?.Tree_Level);

#line default
#line hidden
            EndContext();
            BeginContext(603, 22, true);
            WriteLiteral(";\r\n    var treeIMG = \"");
            EndContext();
            BeginContext(626, 15, false);
#line 40 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
              Write(ViewBag.TreeIMG);

#line default
#line hidden
            EndContext();
            BeginContext(641, 27, true);
            WriteLiteral("\";\r\n\r\n    var task_count = ");
            EndContext();
            BeginContext(669, 18, false);
#line 42 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
                Write(ViewBag.task_count);

#line default
#line hidden
            EndContext();
            BeginContext(687, 27, true);
            WriteLiteral(";\r\n    var task_complete = ");
            EndContext();
            BeginContext(715, 21, false);
#line 43 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
                   Write(ViewBag.task_finished);

#line default
#line hidden
            EndContext();
            BeginContext(736, 23, true);
            WriteLiteral(";\r\n\r\n    var tree_hp = ");
            EndContext();
            BeginContext(760, 15, false);
#line 45 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
             Write(ViewBag.Tree_HP);

#line default
#line hidden
            EndContext();
            BeginContext(775, 23, true);
            WriteLiteral(";\r\n    var taskToday = ");
            EndContext();
            BeginContext(799, 18, false);
#line 46 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
               Write(ViewBag.task_today);

#line default
#line hidden
            EndContext();
            BeginContext(817, 6879, true);
            WriteLiteral(@";

    // * 0.7
    //var userWidth = window.innerWidth * devicePixelRatio;
    //var userHeight = window.innerHeight * devicePixelRatio;

    var userWidth = window.innerWidth;
    var userHeight = window.innerHeight;

    //var userWidth = 1280;
    //var userHeight = 720;





    var config = {
        type: Phaser.AUTO,
        //width: userWidth,
        //height: userHeight,
        width: 1920,
        height: 1080,
        physics: {
            default: 'arcade',
            arcade: {
                gravity: { y: 200 }
            }
        },
        scene: {
            preload: preload,
            create: create
        },
        parent: 'phaser-container',
        dom: {
            createContainer: true
        },
    };


    var game = new Phaser.Game(config);

    var treeBlock;


    function resize() {
        var canvas = document.querySelector(""canvas"");
        var windowWidth = window.innerWidth;
        var windowHeight = window.innerH");
            WriteLiteral(@"eight;
        var windowRatio = windowWidth / windowHeight;
        var gameRatio = game.config.width / game.config.height;

        if (windowRatio < gameRatio) {
            canvas.style.width = windowWidth + ""px"";
            canvas.style.height = (windowWidth / gameRatio) + ""px"";
        }
        else {
            canvas.style.width = (windowHeight * gameRatio) + ""px"";
            canvas.style.height = windowHeight + ""px"";
        }
    }


    function preload() {

        //ได้แล้ววว ต้องใช้ .. นำหน้าก่อน
        //this.load.image('background', bgTime);
        this.load.image('background', bgTime);

        //Plain Ground
        this.load.image('plain_field', '../assets/GU_Game/img/PlainGround/Plain_Field.png');


        this.load.image('trees', treeIMG);
        //this.load.image('coin_b', '../assets/GU_Game/img/PNG/coin/leaf-coin.png');
        this.load.image('coin_icon', '../assets/GU_Game/img/PNG/coin/leaf-coin.png');
        this.load.image('task_icon', '../assets");
            WriteLiteral(@"/GU_Game/img/PNG/task/task.png');

        



    }
    function create() {

                   

        //window.addEventListener('resize', resize);
        //resize();


        //Flat Tree Design
        //this.add.image(userWidth * 0.5, userHeight * 0.65, 'background').setScale(1);
        
        //this.add.image(userWidth * 0.37, userWidth * 0.23, 'trees').setScale(0.75);
          
        //this.add.image(userWidth * 0.05, userWidth * 0.05, 'coin_icon').setScale(0.05);
        ////this.add.image(userWidth * 0.14, userWidth * 0.05, 'task_icon').setScale(0.05);
        //this.add.image(userWidth * 0.25, userWidth * 0.05, 'task_icon').setScale(0.05);


        //Isometric Tree Design
        //Plain Soil BG 1
        this.add.image(0, 0, 'background').setOrigin(0, 0);
       


        //Test Fine
        //treeBlock = this.physics.add.staticGroup();

        //treeBlock.create(userWidth * 0.5, userHeight * 0.6, 'plain_field').setScale(0.6).refreshBody();
        //t");
            WriteLiteral(@"reeBlock.create(userWidth * 0.5, userHeight * 0.5, 'trees').setScale(1).refreshBody();



        // 1*1 Block
        //treeBlock = this.physics.add.staticGroup();

        //treeBlock.create(960, 600, 'plain_field').setScale(1).refreshBody();
        //treeBlock.create(960, 540, 'trees').setScale(1).refreshBody();


        // 2*2 Blocks

        //Tree 3
        treeBlock_03 = this.physics.add.staticGroup();

        treeBlock_03.create(990, 395, 'plain_field').setScale(1).refreshBody();
        treeBlock_03.create(990, 335, 'trees').setScale(1).refreshBody();

        //Tree 4
        treeBlock_04 = this.physics.add.staticGroup();

        treeBlock_04.create(1275, 565, 'plain_field').setScale(1).refreshBody();
        treeBlock_04.create(1275, 505, 'trees').setScale(1).refreshBody();



        treeBlock_01 = this.physics.add.staticGroup();

        //ยึดที่แกน X และ แกน Y ลบห่างกัน -60
        treeBlock_01.create(700, 560, 'plain_field').setScale(1).refreshBody();
        ");
            WriteLiteral(@"treeBlock_01.create(700, 500, 'trees').setScale(1).refreshBody();

        //Tree 2
        treeBlock_02 = this.physics.add.staticGroup();

        treeBlock_02.create(985, 730, 'plain_field').setScale(1).refreshBody();
        treeBlock_02.create(985, 670, 'trees').setScale(1).refreshBody();




        this.add.image(80, 80, 'coin_icon').setScale(0.08);

        this.add.image(640,80, 'task_icon').setScale(0.08);


        


        if (bgDayorNight == ""Day"") {

            //If task != 0
            if (taskToday == 1) {
                havetoFinish_text = this.add.text(130, 160, taskToday + "" task should be completed within today."", { fontSize: '36px', fill: '#E8AA0C' });
            }
            else if (taskToday != 0) {
                havetoFinish_text = this.add.text(130, 160, taskToday + "" tasks should be completed within today."", { fontSize: '36px', fill: '#E8AA0C' });
            }
            else {
                havetoFinish_text = this.add.text(130, 160, ""You do");
            WriteLiteral(@"n't have any task today."", { fontSize: '36px', fill: '#E8AA0C' });
            }

            //TREE LEVEL
            level_text = this.add.text(130, 65, 'LV ' + treeLevel, { fontSize: '48px', fill: 'gray' });

            //Task/Complete_Task
            hp_text = this.add.text(300, 65, ""HP:"" + tree_hp + '/100', { fontSize: '48px', fill: 'gray' });

            //TREE HP
            task_text = this.add.text(690, 65, task_complete + '/' + task_count, { fontSize: '48px', fill: 'gray' });

        }
        else if (bgDayorNight == ""Night"") {
            
            //If task != 0
            if (taskToday == 1) {
                havetoFinish_text = this.add.text(130,160, taskToday + "" task should be completed within today."", { fontSize: '36px', fill: '#ffe790' });
            }
            else if (taskToday != 0) {
                havetoFinish_text = this.add.text(130,160, taskToday + "" tasks should be completed within today."", { fontSize: '36px', fill: '#ffe790' });
            }
   ");
            WriteLiteral(@"         else {
                havetoFinish_text = this.add.text(130,160, ""You don't have any task today."", { fontSize: '36px', fill: '#ffe790' });
            }

            //TREE LEVEL
            level_text = this.add.text(130, 65, 'LV ' + treeLevel, { fontSize: '48px', fill: 'white' });

            //Task/Complete_Task
            hp_text = this.add.text(300, 65, ""HP:"" + tree_hp + '/100', { fontSize: '48px', fill: 'white' });

            //TREE HP
            task_text = this.add.text(690, 65, task_complete + '/' + task_count, { fontSize: '48px', fill: 'white' });
        }
        else {
            //ERROR
        }


        

      

       




    }

                

</script>

");
            EndContext();
            BeginContext(7738, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
#line 275 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
  
    if (user_id != null)
    {

#line default
#line hidden
            BeginContext(7781, 291, true);
            WriteLiteral(@"        <div class=""row"" style=""color:#ffe790"">
            <div class=""col-md-1""></div>
            <div class=""col-md-10"">
                <div id=""phaser-container"">

                </div>
            </div>
            <div class=""col-md-1""></div>
            
        </div>
");
            EndContext();
#line 288 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
        
    }
    else
    {
      

#line default
#line hidden
            BeginContext(8114, 139, true);
            WriteLiteral("        <br />\r\n        <div class=\"row\">\r\n            <h1 class=\"display-4\">Please Login Before enter this content.</h1>\r\n        </div>\r\n");
            EndContext();
#line 297 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"

    }

#line default
#line hidden
            BeginContext(8265, 28, true);
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
            BeginContext(8294, 25, false);
#line 314 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Main\Index.cshtml"
Write(Html.Raw(TempData["msg"]));

#line default
#line hidden
            EndContext();
            BeginContext(8319, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GU.Models.Trees> Html { get; private set; }
    }
}
#pragma warning restore 1591
