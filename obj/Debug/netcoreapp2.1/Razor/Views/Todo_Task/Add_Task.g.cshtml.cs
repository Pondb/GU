#pragma checksum "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "aa8b91b8bb8c7d26f46ff64d558085d7b804f0f0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Todo_Task_Add_Task), @"mvc.1.0.view", @"/Views/Todo_Task/Add_Task.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Todo_Task/Add_Task.cshtml", typeof(AspNetCore.Views_Todo_Task_Add_Task))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\_ViewImports.cshtml"
using GU;

#line default
#line hidden
#line 2 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\_ViewImports.cshtml"
using GU.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa8b91b8bb8c7d26f46ff64d558085d7b804f0f0", @"/Views/Todo_Task/Add_Task.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ff57ca875f9df937fe78e46941148558c1432e42", @"/Views/_ViewImports.cshtml")]
    public class Views_Todo_Task_Add_Task : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<GU.Models.ToDo_Task>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "hide", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "show", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "N", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Y", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Remove_Task", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Checked_Task", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
  
    ViewData["Title"] = "Register";

#line default
#line hidden
            BeginContext(87, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(642, 428, true);
            WriteLiteral(@"
<script language=""javascript"" type=""text/javascript"">


    function task_add() {

        var task_Parent_ID = $('#Task_Parent_ID').val();
        var task_Name = $('#Task_Name').val();
        var task_Due_Date = $('#Task_Due_Date').val();
        var task_Due_Time = $('#Task_Due_Time').val();
        var task_Description = $('#Task_Description').val();

        $.ajax
            ({

                url: '");
            EndContext();
            BeginContext(1071, 30, false);
#line 51 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                 Write(Url.Action("Add", "Todo_Task"));

#line default
#line hidden
            EndContext();
            BeginContext(1101, 1035, true);
            WriteLiteral(@"',
                cache: false,
                type: 'POST',
                data: {
                    Task_Parent_ID: task_Parent_ID,
                    Task_Name: task_Name,
                    Task_Due_Date: task_Due_Date,
                    Task_Due_Time: task_Due_Time,
                    Task_Description: task_Description
                },
                success: function (data) {

                    location.reload();








                },
                error: function () {
                    BootstrapDialog.show({ title: 'Error', type: BootstrapDialog.TYPE_DANGER, message: 'AJAX ERROR' });
                },
            });
    }

    //Add Daily Task
    function d_task_add() {


        var task_Name = $('#d_Task_Name').val();
        var task_Due_Date = $('#d_Task_Due_Date').val();
        var task_Due_Time = $('#d_Task_Due_Time').val();
        var task_Description = $('#d_Task_Description').val();

        $.ajax
            ({

           ");
            WriteLiteral("     url: \'");
            EndContext();
            BeginContext(2137, 30, false);
#line 91 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                 Write(Url.Action("Add", "Todo_Task"));

#line default
#line hidden
            EndContext();
            BeginContext(2167, 1267, true);
            WriteLiteral(@"',
                cache: false,
                type: 'POST',
                data: {

                    Task_Name: task_Name,
                    Task_Due_Date: task_Due_Date,
                    Task_Due_Time: task_Due_Time,
                    Task_Description: task_Description
                },
                success: function (data) {

                    //$(""#alert_message"").fadeIn(300);
                    //$('#alert_message').text(""Task added !"");
                    //$('#alert_message').css(""color"", ""green"");
                    //$(""#alert_message"").delay(1500).fadeOut(300);
                    location.reload();


                },
                error: function () {
                    BootstrapDialog.show({ title: 'Error', type: BootstrapDialog.TYPE_DANGER, message: 'AJAX ERROR' });
                },
            });
     }

    function checked_task() {

        var task_Parent_ID = $('#Task_Parent_ID').val();
        var task_Name = $('#Task_Name').val();");
            WriteLiteral("\n        var task_Due_Date = $(\'#Task_Due_Date\').val();\r\n        var task_Due_Time = $(\'#Task_Due_Time\').val();\r\n        var task_Description = $(\'#Task_Description\').val();\r\n            $.ajax\r\n                ({\r\n\r\n                    url: \'");
            EndContext();
            BeginContext(3435, 33, false);
#line 127 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                     Write(Url.Action("Add", "Checked_Task"));

#line default
#line hidden
            EndContext();
            BeginContext(3468, 8088, true);
            WriteLiteral(@"',
                    cache: false,
                    type: 'POST',
                    data: {
                        Task_Parent_ID: task_Parent_ID,
                        Task_Name: task_Name,
                        Task_Due_Date: task_Due_Date,
                        Task_Due_Time: task_Due_Time,
                        Task_Description: task_Description
                    },
                    success: function (data) {

                        location.reload();








                    },
                    error: function () {
                        BootstrapDialog.show({ title: 'Error', type: BootstrapDialog.TYPE_DANGER, message: 'AJAX ERROR' });
                    },
                });
        }


    $(document).ready(function () {




        //$('#table_test').DataTable({
        //    ""ajax"": {
        //        ""url"": ""/Todo_Task/GetTaskList"",
        //        ""type"": ""GET"",
        //        ""datatype"": ""json""

        //    },
        ");
            WriteLiteral(@"//    ""columns"": [
        //        { ""data"": ""Task_Name"" },
        //        { ""data"": ""Task_Due_Date"" },
        //        { ""data"": ""Task_Due_Time"" },
        //        { ""data"": ""Task_Description"" }
        //    ]
        //    ,
        //    responsive: true
        //    //,
        //    //""columnDefs"": [
        //    //    {
        //    //        ""targets"": [0],
        //    //        ""visible"": false
        //    //    }
        //    //]

        //});

        $('#task_Table').DataTable({
            responsive: true,
            ""order"": [[3, 'dsc']],
            ""columnDefs"": [
                {
                    ""targets"": [3],
                    ""visible"": false
                }
                ,
                {
                    ""targets"": [4],
                    ""visible"": true
                }

            ]

        });

        var table = $('#task_Table').DataTable();

        //alert_bt(""HELLO"", ""This is my text."", ""info"");



");
            WriteLiteral(@"



        $('#Task_Due_Date').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1900:2200'

        });

        $('#btnTask_Due_Date').click(function () {

            $('#Task_Due_Date').val("""");

        });

        $('#btnRedraw').click(function () {

            table.draw();

        });


        //Default Task to hide finished column.
        table
            .columns(3)
            .search(""NOT"")
            .draw();

        $(""#showTask"").change(function () {

            if (this.value == ""show"") {

                table
                    .columns(3)
                    .search("""")
                    .draw();
            } else if (this.value == ""hide"") {

                table
                    .columns(3)
                    .search(""NOT"")
                    .draw();
            }

        });



        $(""#searchTodayTask"").change(function () {

   ");
            WriteLiteral(@"         var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }

            var todayNow = dd + '/' + mm + '/' + yyyy;

            if (this.value == ""Y"") {

                table
                    .columns(2)
                    .search(todayNow)
                    .draw();
            } else if (this.value == ""N"") {

                table
                    .columns(2)
                    .search("""")
                    .draw();
            }

        });

        $('#btnDaily').click(function () {

            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }");
            WriteLiteral(@"
            if (mm < 10) {
                mm = '0' + mm;
            }

            var todayNow = dd + '/' + mm + '/' + yyyy;


            $('#d_Task_Due_Date').val(todayNow);
            $('#d_Task_Due_Time').val(""23:59"");

        });

        $('#btnDailyAdd').click(function () {

            var d_task_name = $(""#d_Task_Name"").val();


            var validateArray = [];


            if (d_task_name == """") {
                validateArray.push(""Please enter <b>'Task Name'</b> before add."");
            }





            if (validateArray.length > 0) {
                var text = """";

                var i;

                for (i = 0; i < validateArray.length; i++) {
                    text += validateArray[i] + ""<br>"";
                }




                return false;
            }
            else {

                //ต้องส่ง AJAX ADD ตรงนี้
                d_task_add();
                return true;




            }
        });



        $");
            WriteLiteral(@"('#btnAdd').click(function () {

            var task_name = $(""#Task_Name"").val();
            var task_due_date = $(""#Task_Due_Date"").val();
            var task_due_time = $(""#Task_Due_Time"").val();

            var validateArray = [];


            if (task_name == """") {
                validateArray.push(""Please enter <b>'Task Name'</b> before add."");
            }
            if (task_due_date == """") {
                validateArray.push(""Please enter <b>'Task Due Date'</b> before add."");
            }
            if (task_due_time == """") {
                validateArray.push(""Please enter <b>'Task Due Time'</b> before add."");
            }




            if (validateArray.length > 0) {
                var text = """";

                var i;

                for (i = 0; i < validateArray.length; i++) {
                    text += validateArray[i] + ""<br>"";
                }

                $('#alertTab').addClass(""show"");
                $('#alertText').empty();
         ");
            WriteLiteral(@"       $('#alertText').append(text);


                return false;
            }
            else {

                //ต้องส่ง AJAX ADD ตรงนี้
                task_add();
                return true;




            }

        });



        // SUBTASK ADD HERE ____________________________________________________________________________________________________________ //


        ////ADD SUBTASK
        //var subTask_1 = document.getElementById(""subTask_1"");

        //subTask_1.addEventListener(""keyup"", function (event) {
        //    // Cancel the default action, if needed
        //    event.preventDefault();
        //    // Number 13 is the ""Enter"" key on the keyboard
        //    if (event.keyCode === 13) {
        //        // Trigger the button element with a click
        //        document.getElementById(""addSubTask"").click();
        //    }
        //});

    });

</script>

<style>
    hr.style2 {
        border-top: 3px double #8c8b8b;
        back");
            WriteLiteral(@"ground-color: cornflowerblue;
    }

    #sp1 {
        background-color: #cdc9c9;
    }

    .error {
        border: 1px solid red;
    }

    .pass {
        border: 1px solid green;
    }

    .main-panel {
        border: 1px;
        background-color: #eaeaea;
        border-radius: 20px;
    }
</style>

<style>


    .fc-head {
        background-color: #1C1408;
        color: white;
        font-family: ""Trebuchet MS"", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    .fc-time {
        display: none;
    }

 
    #calender {
        position: static;
    }
</style>

<br />


<link href=""//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css"" rel=""stylesheet"" />
<link href=""//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css"" rel=""stylesheet"" media=""print"" />



");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(11573, 365, true);
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js""></script>
    <script src=""//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js""></script>

    <script>
        $(document).ready(function () {

            var events = [];
            $.ajax({
                type: ""GET"",
                url: '");
                EndContext();
                BeginContext(11939, 35, false);
#line 496 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                 Write(Url.Action("GetTasks", "Todo_Task"));

#line default
#line hidden
                EndContext();
                BeginContext(11974, 4813, true);
                WriteLiteral(@"',

                success: function (data) {
                    $.each(data, function (i, v) {

                        var taskDueTime = v.Task_Due_Time;

                        var taskHour = taskDueTime.substring(0, 2);
                        var taskMinute = taskDueTime.substring(2, 4);

                        var taskDueTime_Full = taskHour + "":"" + taskMinute;


                        // Not Complete but Not Failed.
                        if (v.Task_isComplete == ""N"" && v.Task_isFail == ""N"") {
                            events.push({

                                title: v.Task_Name,
                                description: v.Task_Description,
                                start: moment(v.Task_Due_Date),
                                time: taskDueTime_Full,
                                color: '#D7D7D9',
                                status: ""Pending""




                            });
                        }

                        //Completed.
 ");
                WriteLiteral(@"                       if (v.Task_isComplete == ""Y"" && v.Task_isFail == ""N"") {
                            events.push({

                                title: v.Task_Name,
                                description: v.Task_Description,
                                start: moment(v.Task_Due_Date),
                                time: taskDueTime_Full,
                                color: '#7FCF7E',
                                status: ""Completed""




                            });
                        }

                        //Failed.
                        if (v.Task_isComplete == ""N"" && v.Task_isFail == ""Y"") {
                            events.push({

                                title: v.Task_Name,
                                description: v.Task_Description,
                                start: moment(v.Task_Due_Date),
                                time: taskDueTime_Full,
                                color: '#FF524F',
                               ");
                WriteLiteral(@" status: ""Failed""




                            });
                        }



                    })

                    GenerateCalender(events);
                },
                error: function (error) {
                    alert('failed');
                }
            })

            function GenerateCalender(events) {

                $('#calender').fullCalendar('destroy');

                $('#calender').fullCalendar({
                    contentHeight: 500,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {

                        $('#myModal #eventTitle').tex");
                WriteLiteral(@"t(calEvent.title);

                        var $description = $('<div/>');

                        if (calEvent.status == ""Completed"") {
                            $description.append($('<p/>').html('<b>Status : </b>' + ""<b style='color:green'>"" + calEvent.status + ""</b>""));
                        }
                        else if (calEvent.status == ""Pending"") {
                            $description.append($('<p/>').html('<b>Status : </b>' + ""<b style='color:gray'>"" + calEvent.status + ""</b>""));
                        }
                        else if (calEvent.status == ""Failed"") {
                            $description.append($('<p/>').html('<b>Status : </b>' + ""<b style='color:red'>"" + calEvent.status + ""</b>""));
                        }

                        $description.append($('<p/>').html('<hr>'));
                        $description.append($('<p/>').html('<b>Due Date : </b>' + calEvent.start.format(""DD MMM YYYY"")));
                        $description.append($('<p/>')");
                WriteLiteral(@".html('<b>Due Time : </b>' + calEvent.time));

                        if (calEvent.description != null) {
                            $description.append($('<p/>').html('<b>Note : </b>' + calEvent.description));
                        }
                        else {
                            $description.append($('<p/>').html('<b>Note : </b>'));
                        }
                        

                        $('#myModal #pDetails').empty().html($description);
                        $('#modalHeader').css('background-color', calEvent.color);

                        $('#myModal').modal();


                    }
                })
            }

        })
    </script>
");
                EndContext();
            }
            );
            BeginContext(16790, 3761, true);
            WriteLiteral(@"

<button id=""addSubTask"" hidden>Add</button>
<button id=""btnRedraw"" hidden></button>

<p id=""alert_message""></p>


<div id=""myModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"" id=""modalHeader"" style=""background-color:#7fcf7e"">
                <h4 class=""modal-title""><span id=""eventTitle""></span></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>

            </div>

            <div class=""modal-body"">
                <p id=""pDetails""></p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-outline-secondary"" data-dismiss=""modal"">Back</button>
            </div>
        </div>
    </div>
</div>

<div class=""row"">

    <div class=""col-md-1""></div>

    <div class=""col-md-10"">

        <!-- Calendar -->
        <div class=""row"">
            <div class=""col-md-12"">

             ");
            WriteLiteral(@"   <div id=""calender"">

                </div>

                <br />
                <hr />
            </div>
        </div>

        <!-- daily task -->
        <div class=""row"">
            <div class=""col-md-12"">
                <h1>Let's add some target.</h1>
                <br />
                <button data-toggle=""collapse"" data-target=""#dailyTask"" class=""btn btn-success btn-block "" id=""btnDaily"">Daily Task</button>

                <div id=""dailyTask"" class=""collapse"">
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <br />
                            <hr />
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <h1>Daily Task</h1>

                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <div class=""form-group");
            WriteLiteral(@""">
                                        <label>Task Name:</label>
                                        <input name=""d_Task_Name"" type=""text"" class=""form-control"" id=""d_Task_Name"">
                                    </div>
                                </div>
                            </div>


                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class=""form-group"">
                                        <label>Due Date:</label>
                                        <input name=""d_Task_Due_Date"" type=""text"" class=""form-control"" readonly id=""d_Task_Due_Date"">

                                    </div>
                                </div>

                                <div class=""col-md-3"">
                                    <label>Time:</label>
                                    <input name=""d_Task_Due_Time"" type=""time"" class=""form-control"" id=""d_Task_Due_Time"" readonly>
            ");
            WriteLiteral(@"                    </div>


                            </div>




                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <div class=""form-group"">
                                        <label>Add Note:</label>
                                        <textarea name=""d_Task_Description"" type=""text"" class=""form-control"" rows=""5"" id=""d_Task_Description""></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class=""row"">
                                <div class=""col-md-12"">
");
            EndContext();
            BeginContext(20681, 1081, true);
            WriteLiteral(@"                                    <button class=""btn btn-success btn-outline btn-outline-white"" id=""btnDailyAdd"">Add</button>
                                </div>
                            </div>
                            <hr />



                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class=""row"">
            <br />
        </div>


        <!-- normal task -->
        <div class=""row"">
            <div class=""col-md-12"">
                <button data-toggle=""collapse"" data-target=""#normalTask"" class=""btn btn-secondary btn-block"">Normal Task</button>

                <div id=""normalTask"" class=""collapse"">
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <br />
                            <hr />
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-md-12""");
            WriteLiteral(">\r\n                            <h1>Normal Task</h1>\r\n\r\n\r\n");
            EndContext();
            BeginContext(22291, 1850, true);
            WriteLiteral(@"                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <div class=""form-group"">
                                        <label>Task Name:</label>
                                        <input name=""Task_Name"" type=""text"" class=""form-control"" id=""Task_Name"">
                                    </div>
                                </div>
                            </div>


                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class=""form-group"">
                                        <label>Due Date:</label>
                                        <input name=""Task_Due_Date"" type=""text"" class=""form-control"" readonly id=""Task_Due_Date"">

                                    </div>
                                </div>

                                <div class=""col-md-3"">
                                    <label>Time");
            WriteLiteral(@":</label>
                                    <input name=""Task_Due_Time"" type=""time"" class=""form-control"" id=""Task_Due_Time"">
                                </div>


                            </div>




                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <div class=""form-group"">
                                        <label>Add Note:</label>
                                        <textarea name=""Task_Description"" type=""text"" class=""form-control"" rows=""5"" id=""Task_Description""></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class=""row"">
                                <div class=""col-md-12"">
");
            EndContext();
            BeginContext(24271, 1081, true);
            WriteLiteral(@"                                    <button class=""btn btn-success btn-outline btn-outline-white"" id=""btnAdd"">Add</button>
                                </div>
                            </div>
                            <hr />


                        </div>
                    </div>



                </div>
            </div>
        </div>

        <div class=""row"">
            <br />

        </div>
        <hr />


        <!-- task table -->
        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <h1>How about your targets?</h1>
                        <br />

                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label>Show all completed and failed tasks:</label>
                                    <select id=""showTask"" class=");
            WriteLiteral("\"form-control\">\r\n                                        ");
            EndContext();
            BeginContext(25352, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67647f70d0d24adb8bfb402367912612", async() => {
                BeginContext(25382, 4, true);
                WriteLiteral("Hide");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25395, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(25437, 34, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "939a6fdf5bac48be9f6b94a0428f9f7f", async() => {
                BeginContext(25458, 4, true);
                WriteLiteral("Show");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25471, 440, true);
            WriteLiteral(@"
                                    </select>
                                </div>
                            </div>

                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label>Show only today tasks:</label>
                                    <select id=""searchTodayTask"" class=""form-control"">
                                        ");
            EndContext();
            BeginContext(25911, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2dc47a30a8684c5780f43a0ab18b97ac", async() => {
                BeginContext(25938, 4, true);
                WriteLiteral("Hide");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25951, 42, true);
            WriteLiteral("\r\n                                        ");
            EndContext();
            BeginContext(25993, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85cc71933149456785e5cb0613619d99", async() => {
                BeginContext(26011, 4, true);
                WriteLiteral("Show");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(26024, 169, true);
            WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
            BeginContext(26321, 104, true);
            WriteLiteral("                        <table width=\"100%\" class=\"table table-hover table-striped\" id=\"task_Table\">\r\n\r\n");
            EndContext();
            BeginContext(26467, 941, true);
            WriteLiteral(@"
                            <thead>

                                <tr>
                                    <th></th>

                                    <th>
                                        Task Name
                                    </th>
                                    <th>
                                        Due Date
                                    </th>

                                    <th>
                                        is Finish
                                    </th>

                                    <th>
                                        Description
                                    </th>

                                    <th>
                                        <!--Remove-->
                                    </th>



                                </tr>
                            </thead>
                            <tbody>

");
            EndContext();
#line 911 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                 foreach (var item in Model)
                                {

                                    //task completed.
                                    if (item.Task_isComplete == "Y")
                                    {

#line default
#line hidden
            BeginContext(27671, 146, true);
            WriteLiteral("                                        <tr class=\"table-success\">\r\n\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(27869, 259, true);
            WriteLiteral(@"                                                    <button type=""button"" class=""btn btn-success btn-circle"">
                                                        <i class=""fa fa-check""></i>
                                                    </button>
");
            EndContext();
            BeginContext(28179, 179, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n                                                ");
            EndContext();
            BeginContext(28359, 14, false);
#line 929 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Name);

#line default
#line hidden
            EndContext();
            BeginContext(28373, 179, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n                                                ");
            EndContext();
            BeginContext(28553, 40, false);
#line 933 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(ConvertDatetoDisplay(item.Task_Due_Date));

#line default
#line hidden
            EndContext();
            BeginContext(28593, 3, true);
            WriteLiteral(" | ");
            EndContext();
            BeginContext(28597, 39, false);
#line 933 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                       Write(InsertTimeToDisplay(item.Task_Due_Time));

#line default
#line hidden
            EndContext();
            BeginContext(28636, 133, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n\r\n");
            EndContext();
#line 938 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                  
                                                    if (item.Task_isFail == "Y")
                                                    {

#line default
#line hidden
            BeginContext(28958, 74, true);
            WriteLiteral("                                                        <font>YES</font>\r\n");
            EndContext();
#line 942 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "N")
                                                    {

#line default
#line hidden
            BeginContext(29233, 74, true);
            WriteLiteral("                                                        <font>NOT</font>\r\n");
            EndContext();
#line 946 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "Y")
                                                    {

#line default
#line hidden
            BeginContext(29508, 94, true);
            WriteLiteral("                                                        <font style=\"color:green\">YES</font>\r\n");
            EndContext();
#line 950 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }

                                                    else
                                                    {

#line default
#line hidden
            BeginContext(29772, 94, true);
            WriteLiteral("                                                        <font style=\"color:red\">ERROR</font>\r\n");
            EndContext();
#line 955 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                

#line default
#line hidden
            BeginContext(29972, 131, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(30257, 48, true);
            WriteLiteral("                                                ");
            EndContext();
            BeginContext(30306, 21, false);
#line 962 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Description);

#line default
#line hidden
            EndContext();
            BeginContext(30327, 131, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
#line 966 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                  

                                                    if (item.Task_isComplete == "Y")
                                                    {

                                                    }
                                                    else
                                                    {

#line default
#line hidden
            BeginContext(30823, 56, true);
            WriteLiteral("                                                        ");
            EndContext();
            BeginContext(30879, 410, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e911e0ce6d3749639aee64b814a3da4d", async() => {
                BeginContext(30936, 349, true);
                WriteLiteral(@"
                                                            <button type=""button"" class=""btn btn-outline-danger btn-circle"">
                                                                <i class=""fa fa-remove""></i>
                                                            </button>
                                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 974 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                      WriteLiteral(item.Task_ID);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(31289, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 979 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }

                                                

#line default
#line hidden
            BeginContext(31399, 108, true);
            WriteLiteral("                                            </td>\r\n\r\n\r\n\r\n\r\n\r\n                                        </tr>\r\n");
            EndContext();
#line 989 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                    } //Normal
                                    else if (item.Task_isComplete == "N" && item.Task_isFail == "N")
                                    {

#line default
#line hidden
            BeginContext(31696, 122, true);
            WriteLiteral("                                        <tr>\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(31870, 52, true);
            WriteLiteral("                                                    ");
            EndContext();
            BeginContext(31922, 399, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1658988fef7648de88da739a4dedae09", async() => {
                BeginContext(31980, 337, true);
                WriteLiteral(@"
                                                        <button type=""button"" class=""btn btn-success btn-outline btn-circle"">
                                                            <i class=""fa fa-check""></i>
                                                        </button>
                                                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 995 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                   WriteLiteral(item.Task_ID);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(32321, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(32325, 52, true);
            WriteLiteral("                                                    ");
            EndContext();
            BeginContext(32377, 394, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b4e266a95a614a3b8968c2f8cc0f70cf", async() => {
                BeginContext(32434, 333, true);
                WriteLiteral(@"
                                                        <button type=""button"" class=""btn btn-outline-danger btn-circle"">
                                                            <i class=""fa fa-remove""></i>
                                                        </button>
                                                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 1001 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                  WriteLiteral(item.Task_ID);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(32771, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(32824, 179, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n                                                ");
            EndContext();
            BeginContext(33004, 14, false);
#line 1011 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Name);

#line default
#line hidden
            EndContext();
            BeginContext(33018, 179, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n                                                ");
            EndContext();
            BeginContext(33198, 40, false);
#line 1015 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(ConvertDatetoDisplay(item.Task_Due_Date));

#line default
#line hidden
            EndContext();
            BeginContext(33238, 3, true);
            WriteLiteral(" | ");
            EndContext();
            BeginContext(33242, 39, false);
#line 1015 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                       Write(InsertTimeToDisplay(item.Task_Due_Time));

#line default
#line hidden
            EndContext();
            BeginContext(33281, 133, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n\r\n");
            EndContext();
#line 1020 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                  
                                                    if (item.Task_isFail == "Y")
                                                    {

#line default
#line hidden
            BeginContext(33603, 74, true);
            WriteLiteral("                                                        <font>YES</font>\r\n");
            EndContext();
#line 1024 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "N")
                                                    {

#line default
#line hidden
            BeginContext(33878, 74, true);
            WriteLiteral("                                                        <font>NOT</font>\r\n");
            EndContext();
#line 1028 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "Y")
                                                    {

#line default
#line hidden
            BeginContext(34153, 94, true);
            WriteLiteral("                                                        <font style=\"color:green\">YES</font>\r\n");
            EndContext();
#line 1032 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }

                                                    else
                                                    {

#line default
#line hidden
            BeginContext(34417, 94, true);
            WriteLiteral("                                                        <font style=\"color:red\">ERROR</font>\r\n");
            EndContext();
#line 1037 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                

#line default
#line hidden
            BeginContext(34617, 131, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(34896, 48, true);
            WriteLiteral("                                                ");
            EndContext();
            BeginContext(34945, 21, false);
#line 1044 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Description);

#line default
#line hidden
            EndContext();
            BeginContext(34966, 131, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
#line 1048 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                  
                                                    if (item.Task_isComplete == "Y")
                                                    {

                                                    }
                                                    else
                                                    {
                                                        

#line default
#line hidden
#line 1059 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                  
                                                    }
                                                

#line default
#line hidden
            BeginContext(36054, 108, true);
            WriteLiteral("                                            </td>\r\n\r\n\r\n\r\n\r\n\r\n                                        </tr>\r\n");
            EndContext();
#line 1069 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                    }
                                    else if (item.Task_isComplete == "N" && item.Task_isFail == "Y")
                                    {


#line default
#line hidden
            BeginContext(36344, 143, true);
            WriteLiteral("                                        <tr class=\"table-danger\">\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(36585, 426, true);
            WriteLiteral(@"                                                <button type=""button"" class=""btn btn-danger btn-circle"">
                                                    <i class=""fa fa-remove""></i>
                                                </button>

                                            </td>

                                            <td style=""text-align:center"">
                                                ");
            EndContext();
            BeginContext(37012, 14, false);
#line 1083 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Name);

#line default
#line hidden
            EndContext();
            BeginContext(37026, 179, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n                                                ");
            EndContext();
            BeginContext(37206, 40, false);
#line 1087 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(ConvertDatetoDisplay(item.Task_Due_Date));

#line default
#line hidden
            EndContext();
            BeginContext(37246, 3, true);
            WriteLiteral(" | ");
            EndContext();
            BeginContext(37250, 39, false);
#line 1087 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                                                       Write(InsertTimeToDisplay(item.Task_Due_Time));

#line default
#line hidden
            EndContext();
            BeginContext(37289, 133, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n\r\n");
            EndContext();
#line 1092 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                  
                                                    if (item.Task_isFail == "Y")
                                                    {

#line default
#line hidden
            BeginContext(37611, 74, true);
            WriteLiteral("                                                        <font>YES</font>\r\n");
            EndContext();
#line 1096 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "N")
                                                    {

#line default
#line hidden
            BeginContext(37886, 74, true);
            WriteLiteral("                                                        <font>NOT</font>\r\n");
            EndContext();
#line 1100 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                    else if (item.Task_isComplete == "Y")
                                                    {

#line default
#line hidden
            BeginContext(38161, 94, true);
            WriteLiteral("                                                        <font style=\"color:green\">YES</font>\r\n");
            EndContext();
#line 1104 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }

                                                    else
                                                    {

#line default
#line hidden
            BeginContext(38425, 94, true);
            WriteLiteral("                                                        <font style=\"color:red\">ERROR</font>\r\n");
            EndContext();
#line 1109 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                                    }
                                                

#line default
#line hidden
            BeginContext(38625, 129, true);
            WriteLiteral("\r\n                                            </td>\r\n                                            <td style=\"text-align:center\">\r\n");
            EndContext();
            BeginContext(38909, 48, true);
            WriteLiteral("                                                ");
            EndContext();
            BeginContext(38958, 21, false);
#line 1115 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                           Write(item.Task_Description);

#line default
#line hidden
            EndContext();
            BeginContext(38979, 133, true);
            WriteLiteral("\r\n                                            </td>\r\n\r\n                                            <td style=\"text-align:center\">\r\n\r\n");
            EndContext();
            BeginContext(39223, 108, true);
            WriteLiteral("                                            </td>\r\n\r\n\r\n\r\n\r\n\r\n                                        </tr>\r\n");
            EndContext();
#line 1128 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
            BeginContext(39451, 1414, true);
            WriteLiteral(@"                                        <tr class=""table-danger"">
                                            <td style=""text-align:center"">
                                                <font style=""color:red"">ERROR</font>
                                            </td>

                                            <td style=""text-align:center"">
                                                <font style=""color:red"">ERROR</font>
                                            </td>

                                            <td style=""text-align:center"">
                                                <font style=""color:red"">ERROR</font>
                                            </td>


                                            <td style=""text-align:center"">
                                                <font style=""color:red"">ERROR</font>

                                            </td>

                                            <td style=""text-align:center"">
                 ");
            WriteLiteral(@"                               <font style=""color:red"">ERROR</font>

                                            </td>

                                            <td style=""text-align:center"">
                                                <font style=""color:red"">ERROR</font>

                                            </td>


                                        </tr>
");
            EndContext();
#line 1162 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
                                    }



                                }

#line default
#line hidden
            BeginContext(40945, 258, true);
            WriteLiteral(@"                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>





    </div>

    <div class=""col-md-1""></div>
</div>

<br />
<br />







");
            EndContext();
        }
        #pragma warning restore 1998
#line 8 "C:\Users\Pond\source\repos\All_Project\GU\GU\Views\Todo_Task\Add_Task.cshtml"
            

//CONVERT DATE TO DISPLAY
string ConvertDatetoDisplay(string dIn)
{
    var sObj = dIn.Split("-");

    var sYear = dIn.Substring(0, 4);
    var sMonth = dIn.Substring(4, 2);
    var sDate = dIn.Substring(6, 2);

    return sDate + "/" + sMonth + "/" + sYear;
}

//INSERT TIME TO DISPLAY
string InsertTimeToDisplay(string timeIn)
{
    var timeObject = timeIn.Split("-");

    var timeHour = timeIn.Substring(0, 2);
    var timeMinute = timeIn.Substring(2, 2);



    return timeHour + ":" + timeMinute;
}


#line default
#line hidden
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<GU.Models.ToDo_Task>> Html { get; private set; }
    }
}
#pragma warning restore 1591
